omod SORTS is
    protecting STRING .
    sort Level .
    sorts Water Fertilizer .
    sort Content .
    sorts Grain Vegetable Fruit Produce .
    sorts Empty Full .
    sorts WorkerTask TransporterTask TaskType .
    sort Direction .
    sorts Tid TidSet .

    subsorts WorkerTask TransporterTask < TaskType .
    subsorts Grain Vegetable Fruit < Produce .
    subsorts Empty Produce < Content .
    subsort String < Oid .
    subsort Tid < TidSet .

    ops north east south west : -> Direction [ctor] .
    ops low good : -> Level [ctor] .
    op empty : -> Empty [ctor] .
    op full : -> Full [ctor] .
    op water : -> Water [ctor] .
    op fertilizer : -> Fertilizer [ctor] .
    ops salad potatoes turnips pepper tomatoes cucumbers: -> Vegetable [ctor] .
    ops wheat rye : -> Grain [ctor] .
    op peaches : -> Fruit [ctor] .
    ops water fertilize plant remove repair : -> WorkerTask [ctor] .
    op harvest : -> TransporterTask [ctor] .
    op [_,_,_] : Oid TaskType Nat -> Tid .
    op none : -> TidSet [ctor] .
    op __ : TidSet TidSet -> TidSet [ctor assoc comm id: none] .
    op _\_ : TidSet TidSet -> TidSet [assoc] .

    op opposite : Direction Direction -> Bool [comm] .
    op differentAxes : Direction Direction -> Bool [comm] .

    vars D D2 : Direction .
    var TID : Tid .
    var TIDS TIDS2 : TidSet .

    eq opposite(north, south) = true .
    eq opposite(east, west) = true .
    eq opposite(D, D2) = false [owise] .
    eq differentAxes(north, west) = true .
    eq differentAxes(north, east) = true .
    eq differentAxes(south, west) = true .
    eq differentAxes(south, east) = true .
    eq differentAxes(D, D2) = false [owise] .
    eq TIDS \ none = TIDS .
    eq none \ TIDS = none .
    eq (TID TIDS) \ (TID TIDS2) = TIDS \ TIDS2 .
    eq TIDS \ TIDS2 = TIDS [owise] .
endom