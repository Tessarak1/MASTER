load timedFarm .

omod FINAL-TESTS is
  protecting TIMED-FARM .

  ops rob rob2 rob3 : -> Object .
  op farm : -> ClockedConfiguration .
  op locations : -> Configuration .
  op map : -> Object .
  ops GLREP1 GLREP2 GLREP3 GLREP4 : -> Object .
  ops GL1 GL2 GL3 GL4 : -> Object .
  ops I1 I2 I3 I4 I5 I6 I7 I8 I8 : -> Object .
  ops resupply cpoint : -> Object .
  op obstacles : -> Configuration .

  eq rob = < "R1" : Worker | location : (60,-60), speed : 1, direction : east, remainingPath : (90, -60) (120, -60),
    state : moving, detected : nil, detectionRange : 5, handledTime : false, obstructionPoints : nil, cargoLevel : full, curCargo : water, 
    auctions : noAuction, curTask : ["GL", watering, 1], workers : "R2" "R3", transporters : none, workState : noWork > .
  eq rob2 = < "R2" : Worker | location : (70,-60), speed : 1, direction : west, remainingPath : nil,
    state : idle, detected : nil, detectionRange : 5, handledTime : false, obstructionPoints : nil, cargoLevel : full, curCargo : fertilizer, 
    auctions : noAuction, curTask : noTask, workers : "R1" "R3", workState : noWork > .  
  eq rob3 = < "R3" : Worker | location : (20,0), speed : 1, direction : east, remainingPath : nil, state : idle, detected : nil, detectionRange : 5, handledTime : false, obstructionPoints : nil, cargoLevel : full, curCargo : fertilizer, 
    auctions : noAuction, curTask : noTask, workers : "R1" "R2", transporters : none, workState : noWork > . 
  eq I1 = < "I1" : Intersection | location : (0,0), neighbors : "I2" "I4" "CPoint" > .
  eq I2 = < "I2" : Intersection | location : (60,0), neighbors : "I1" "I3" "I6" > .
  eq I3 = < "I3" : Intersection | location : (120,0), neighbors : "I2" "I8" "Resupply" > .
  eq I4 = < "I4" : Intersection | location : (0,-60), neighbors : "I1" "I5" > .
  eq I5 = < "I5" : Intersection | location : (30,-60)  , neighbors : "I4" "I6" "GL1" "GL3" > .
  eq I6 = < "I6" : Intersection | location : (60,-60)  , neighbors : "I5" "I7" "I2" > .
  eq I7 = < "I7" : Intersection | location : (90,-60)  , neighbors : "I6" "I8" "GL2" "GL4" > .
  eq I8 = < "I8" : Intersection | location : (120,-60)  , neighbors : "I7" "I3" > .
  eq GL1 = < "GL1" : Field | location : (30, -50), neighbors : "I5", state : harvest, waterLevel : low, fertilizerLevel : good, 
    waterTimer : [cur: 0 - base: 1000], fertilizerTimer : [cur: 10000 - base: 100], growTimer : [cur: 10000 - base: 100], taskNr : 1,
    growingArea : area((10,-10), (50,-10), (10,-50), (50,-50)), workers : "R1", transporters : none,
    auctions : noAuction > .
  eq GL2 = < "GL2" : Field | location : (90, -50), neighbors : "I7", state : harvest, waterLevel : low, fertilizerLevel : good, 
    waterTimer : [cur: 0 - base: 1000], fertilizerTimer : [cur: 10000 - base: 100], growTimer : [cur: 10000 - base: 100], taskNr : 1,
    growingArea : area((70,-10), (110,-10), (70, -50), (110,-50)), workers : "R1" "R2" "R3", transporters : none,
    auctions : noAuction > .
  eq GL3 = < "GL3" : Field | location : (30, -70), neighbors : "I5", state : harvest, waterLevel : low, fertilizerLevel : good, 
    waterTimer : [cur: 0 - base: 1000], fertilizerTimer : [cur: 10000 - base: 100], growTimer : [cur: 10000 - base: 100], taskNr : 1,
    growingArea : area((10,-70), (50,-70), (10,-110), (50,-110)), workers : "R1" "R2" "R3", transporters : none,
    auctions : noAuction > .
  eq GL4 = < "GL4" : Field | location : (90, -70), neighbors : "I5", state : harvest, waterLevel : low, fertilizerLevel : good, 
    waterTimer : [cur: 0 - base: 1000], fertilizerTimer : [cur: 10000 - base: 100], growTimer : [cur: 10000 - base: 100], taskNr : 1,
    growingArea : area((70,-70), (110,-70), (70,-110), (110,-110)), workers : "R1" "R2" "R3", transporters : none,
    auctions : noAuction > .
  eq GLREP1 = < "GL1" : Field | location : (30, -50), neighbors : "I5" > .
  eq GLREP2 = < "GL2" : Field | location : (90, -50), neighbors : "I7" >  .
  eq GLREP3 = < "GL3" : Field | location : (30,-70), neighbors : "I5" > .
  eq GLREP4 = < "GL4" : Field | location : (90,-70), neighbors : "I7" > .
  eq resupply = < "Resupply" : ResupplySite | location : (120,40), neighbors : "I3" > .
  eq cpoint = < "CPoint" : CollectionSite | location : (0,40), neighbors : "I1" > .
  eq locations = I1 I2 I3 I4 I5 I6 I7 I8 GLREP1 GLREP2 GLREP3 GLREP4 resupply cpoint .
  eq obstacles = < "O1" : Obstacle | location : (1,0) > .
  eq map = < "Map" : Map | allIntersections : locations, paths : createPathSet(locations) > .
  eq farm = map rob rob2 @ 0 .
endom

red yieldPath(rob2, map, ((65, -60) (90, -60) (120, -60))) .
red addAndRemove(map, (70,-60), (65,-60)) .
red $yieldPath((70,-60), addAndRemove(map, (70,-60), (65,-60)), (65,-60)) .
red updateDistances(PQConvert((70,-60), getIntersections(addAndRemove(map, (70,-60), (65,-60))))) .