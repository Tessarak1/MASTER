load timedFarm .

omod BASE is
    protecting TIMED-FARM .

    ops robotAttrs workerAttrs transporterAttrs : -> AttributeSet .
    op fieldAttrs : -> AttributeSet .
    ops rob rob2 : -> Object .
    ops I1 I2 I3 I4 I5 I6 : -> Object .
    op resupply : -> Object .
    op collection : -> Object .
    ops GL1 GL2 : -> Object .
    ops intersections1 : -> Configuration .
    op farm1 : -> Configuration .
    op map1 : -> Object .

    eq robotAttrs = broadcastRange : 100, maxSpeed : 1, detected : none, auctions : noAuction, curTask : noTask,
      handledTime : false, negotiations : none, workState : noWork .
    eq workerAttrs = cargoLevel : full .
    eq transporterAttrs = cargoLevel : empty .
    eq fieldAttrs = broadcastRange : 100, growingState : growing, waterLevel : good, fertilizerLevel : good, waterTimer : [cur: 1000 - base: 1000],
      fertilizerTimer : [cur: 1000 - base: 1000], growTimer : [cur: 100 - base: 100], reserved : false, auctions : noAuction .

    eq I1 = < "I1" : PassIntersection | location : (0,0), neighbors : "I2" "I3"  > .
    eq I2 = < "I2" : PassIntersection | location : (100,0), neighbors : "I1" "I4" "I5" "I6" > .
    eq I3 = < "I3" : PassIntersection | location : (0,-100), neighbors : "I4" "I1" > .
    eq I4 = < "I4" : PassIntersection | location : (100,-100), neighbors : "I2" "I3" > .
    eq I5 = < "I5" : PassIntersection | location : (200, 0), neighbors : "I2" > .
    eq I6 = < "I6" : PassIntersection | location : (100,100), neighbors : "I2" > .

    eq resupply = < "Resupply" : ResupplyStation | location : (-50, -100), neighbors : "I3" > .
    eq collection = < "Collection" : CollectionStation | location : (100,-150), neighbors : "I4" > .
    eq intersections1 = I1 I2 I3 I4 I5 I6 resupply collection GL1 .

    eq GL1 = < "GL1" : Field | location : (0, 100), neighbors : "I1", growingArea : area((-50, 100), (50,100), (-50, 150), (50, 150)), fieldAttrs > .
    eq GL2 = < "GL2" : Field | location : (150, -100), neighbors : "I4", growingArea : area((150,-50), (200, -50), (150,-100), (200, -100)), fieldAttrs > .
    
    eq rob = < "W1" : Worker | location : (40,0), state : idle, direction : west, remainingPath : nil, workerAttrs > .
    eq rob2 = < "T1" : Transporter | location : (0,0), state : idle, direction : east, remainingPath : nil, workerAttrs > .

    eq map1 = < "Map" : Map | allIntersections : intersections1, roads : createRoadSet(intersections1) > .
    
    eq farm1 = map1 rob rob2 GL1 .
endom

***General rule for mta for fields?
***Timers
***0 if auction needs to be started
***Auction timers
***When can it be ignored?
***Separate auctions from the rest?
***mta to check auctions one for the rest and then combine.
