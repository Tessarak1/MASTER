load timedFarm .

omod LEADER-ELECTION-TESTS is
  protecting TIMED-FARM .
  ops rob rob2 : -> Object .
  op farm : -> ClockedConfiguration .
  op locations : -> Configuration .
  op map : -> Object .
  eq rob2 = < "R2" : Worker | location : (100,0), speed : 100, direction : west, remainingPath : (0,0), state : moving, detected : nil, detectionRange : 5, handledTime : false, obstructionPoints : nil > .
  eq rob = < "R" : Worker | location : (0,0), speed : 100, direction : east, remainingPath : (100,0), state : moving, detected : nil, detectionRange : 5, handledTime : false, obstructionPoints : nil > .
  ops I1 I2 I3 I4 : -> Object .
  eq I1 = < "I1" : Intersection | location : (0,0), neighbors : "I2" "I3" "I4" > .
  eq I2 = < "I2" : Intersection | location : (-10, 0), neighbors : "I1" > .
  eq I3 = < "I3" : Intersection | location : (10, 0), neighbors : "I1" > .
  eq I4 = < "I4" : GrowingLoc | location : (0,-10), neighbors : "I1", growingState : growing, waterLevel : low, fertilizerLevel : good, waterTimer : [cur: 10 - base: 100], fertilizerTimer : [cur: 1000 - base: 1000], growTimer : [cur: 200 - base: 200], taskNr : 0, growingArea : area((-10,-10), (10,-10), (-10, -20), (10,-20)) > .
  eq locations = I1 I2 I3 I4 .
  eq map = < "Map" : Map | allIntersections : locations, paths : createPathSet(locations) > .
  eq farm = rob rob2 map @ 0 .
endom

omod REPLAN-TESTS is
  protecting TIMED-FARM .
  ops rob : -> Object .
  op farm : -> ClockedConfiguration .
  op locations : -> Configuration .
  op obstacles : -> Configuration .
  op map : -> Object .
  op testfnc : -> Object .

  eq rob = < "R" : Worker | location : (0,0), speed : 1, direction : east, remainingPath : (10,0), state : moving, detected : nil, detectionRange : 3, handledTime : false, obstructionPoints : nil > .
  ops I1 I2 I3 I4 : -> Object .
  eq I1 = < "I1" : Intersection | location : (0,0), neighbors : "I2" "I3" > .
  eq I2 = < "I2" : Intersection | location : (10, 0), neighbors : "I1" "I4" > .
  eq I3 = < "I3" : Intersection | location : (0, 10), neighbors : "I1" "I4" > .
  eq I4 = < "I4" : Intersection | location : (10,10), neighbors : "I2" "I3" > .
  eq locations = I1 I2 I3 I4 .
  eq obstacles = < "O1" : Obstacle | location : (5,0) > .
  eq map = < "Map" : Map | allIntersections : locations, paths : createPathSet(locations) > .
  eq farm = rob map obstacles @ 0 .
endom

omod TASK-TESTS is
  protecting TIMED-FARM .

  ops rob : -> Object .
  op farm : -> ClockedConfiguration .
  op locations : -> Configuration .
  op obstacles : -> Configuration .
  op map : -> Object .
  op testfnc : -> Object .
  op GLREP : -> Object .

  var N : Nat .
  var S : String .
  
  eq rob = < "R" : Worker | location : (8,0), speed : 1, direction : west, remainingPath : (8,0), state : moving, detected : { "GL" : GrowingLoc | (-10,0) ; [W: low F: good H: growing]}, detectionRange : 5, handledTime : false, obstructionPoints : nil, cargoLevel : full, curCargo : water, curTask : noTask > .
  ops I1 I2 I3 I4 : -> Object .
  op GL : -> Object .
  eq I1 = < "I1" : Intersection | location : (0,0), neighbors : "I2" "I3" "GL" > .
  eq I2 = < "I2" : Intersection | location : (10, 0), neighbors : "I1" "I4" > .
  eq I3 = < "I3" : Intersection | location : (0, 10), neighbors : "I1" "I4" > .
  eq I4 = < "I4" : Intersection | location : (10,10), neighbors : "I2" "I3" > .
  eq GL = < "GL" : GrowingLoc | location : (-10, 0), neighbors : "I1", growingState : harvest, waterLevel : good, fertilizerLevel : good, waterTimer : [cur: 100 - base: 100], fertilizerTimer : [cur: 100 - base: 100], growTimer : [cur: 100 - base: 100] > .
  eq GLREP = < "GL" : GrowingLoc | location : (-10, 0), neighbors : "I1" > .
  eq locations = I1 I2 I3 I4 GLREP .
  eq obstacles = < "O1" : Obstacle | location : (5,0) > .
  eq map = < "Map" : Map | allIntersections : locations, paths : createPathSet(locations) > .
  eq farm = rob map GL @ 0 .
endom
