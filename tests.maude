load timedFarm .

omod BASE is
  protecting TIMED-FARM .

  ops robotAttrs workerAttrs transporterAttrs : -> AttributeSet .
  op fieldAttrs : -> AttributeSet .
  ops rob rob2 : -> Object .
  ops I1 I2 I3 I4 I5 I6 I7 : -> Object .
  op resupply : -> Object .
  op collection : -> Object .
  ops GL1 GL2 : -> Object .
  ops intersections1 : -> Configuration .
  op farm1 : -> Configuration .
  op map1 : -> Object .

  op base1 : -> ClockedConfiguration .

  eq robotAttrs = broadcastRange : 200, maxSpeed : 1, detected : none, auctions : noAuction, curTask : noTask,
    handledTime : false, workState : noWork, detectionRange : 10, obstructionPoints : nil, negotiations : none .
  eq workerAttrs = cargoLevel : full .
  eq transporterAttrs = cargoLevel : full .
  eq fieldAttrs = handledTime : false, broadcastRange : 200, growingState : growing, waterLevel : good, fertilizerLevel : good, waterTimer : [cur: 10 - base: 1000],
    fertilizerTimer : [cur: 1000 - base: 1000], growTimer : [cur: 1000 - base: 1000], reserved : false, auctions : noAuction, activeTasks : empty .

  eq I1 = < "I1" : PassIntersection | location : (0,0), neighbors : "I2" "I3" "GL1" > .
  eq I2 = < "I2" : PassIntersection | location : (100,0), neighbors : "I1" "I4" "I5" "I6" > .
  eq I3 = < "I3" : PassIntersection | location : (0,-100), neighbors : "I4" "I1" "Resupply" > .
  eq I4 = < "I4" : PassIntersection | location : (100,-100), neighbors : "I2" "I3" "Collection" > .
  eq I5 = < "I5" : PassIntersection | location : (200, 0), neighbors : "I2" "I7" > .
  eq I6 = < "I6" : PassIntersection | location : (100,100), neighbors : "I2" > .
  eq I7 = < "I7" : PassIntersection | location : (200,100), neighbors : "I5" > .

  eq resupply = < "Resupply" : ResupplyStation | location : (-50, -100), neighbors : "I3" > .
  eq collection = < "Collection" : CollectionStation | location : (100,-150), neighbors : "I4", collections : 0 > .
  eq intersections1 = I1 I2 I3 I4 I5 I6 I7 resupply collection GL1 .

  eq GL1 = < "GL1" : Field | location : (0, 100), neighbors : "I1", growingArea : area((-1, 100), (1,100), (-1, 101), (1, 101)), fieldAttrs > .
  eq GL2 = < "GL2" : Field | location : (150, -100), neighbors : "I4", growingArea : area((150,-50), (200, -50), (150,-100), (200, -100)), fieldAttrs > .
  
  eq rob = < "W1" : Worker | curCargo : water, speed : 0, location : (0,40), state : idle, direction : west, remainingPath : nil, robotAttrs, workerAttrs > .
  eq rob2 = < "T1" : Transporter | speed : 0, location : (0,0), state : idle, direction : east, remainingPath : nil, robotAttrs, transporterAttrs > .

  eq map1 = < "Map" : Map | allIntersections : intersections1, roads : createRoadSet(intersections1) > .
  
  eq farm1 = map1 rob rob2 GL1 collection resupply .
  eq base1 = farm1 @ 0 .
endom

omod WORKER-TESTS is
  protecting BASE .

  op workerFieldAttrs : -> AttributeSet .
  op WGL1 : -> Object . 
  op intersections2 : -> Configuration .
  op map2 : -> Object .
  op farm2 : -> Configuration .
  op base2 : -> ClockedConfiguration .
  op I1 : -> Object .

  ***is empty and need planting.
  eq workerFieldAttrs = handledTime : false, broadcastRange : 200, growingState : empty, waterLevel : good, fertilizerLevel : good, waterTimer : [cur: 1000 - base: 1000],
    fertilizerTimer : [cur: 1000 - base: 1000], growTimer : [cur: 100 - base: 100], reserved : false, auctions : noAuction, activeTasks : empty .

  eq WGL1 = < "WGL1" : Field | location : (0,100), neighbors : "I1", growingArea : area((-1, 100), (1,100), (-1, 101), (1, 101)), workerFieldAttrs > .
  eq I1 = < "I1" : PassIntersection | location : (0,0), neighbors : "I2" "I3" "WGL1" > .

  eq intersections2 = I1 I2 I3 I4 I5 I6 resupply collection WGL1 .
  eq map2 = < "Map2" : Map | allIntersections : intersections2, roads : createRoadSet(intersections2) > .

  eq farm2 = map2 rob rob2 WGL1 collection resupply .
  eq base2 = farm2 @ 0 .
endom

omod TASK-TESTS is
  protecting TIMED-FARM .
  ops taskRobot taskRobot2 : -> Object .
  op taskFarm : -> Configuration .
  op taskTest : -> ClockedConfiguration .
    
  ops I1 I2 I3 I4 I5 I6 I7 : -> Object .
  ops robotAttrs workerAttrs transporterAttrs : -> AttributeSet .
  op fieldAttrs : -> AttributeSet .
  op resupply : -> Object .
  op collection : -> Object .
  ops GL1 GL2 : -> Object .
  ops intersections1 : -> Configuration .
  op map : -> Object .

  eq robotAttrs = broadcastRange : 200, maxSpeed : 1, detected : none, auctions : noAuction, curTask : noTask,
    handledTime : false, workState : noWork, detectionRange : 10, obstructionPoints : nil, negotiations : none .
  eq workerAttrs = cargoLevel : full .
  eq transporterAttrs = cargoLevel : empty .
  eq fieldAttrs = handledTime : false, broadcastRange : 200, growingState : growing, waterLevel : good, fertilizerLevel : good, reserved : false, auctions : noAuction, activeTasks : empty .

  eq I1 = < "I1" : PassIntersection | location : (0,0), neighbors : "I2" "Resupply" "Collection" > .
  eq I2 = < "I2" : PassIntersection | location : (30,0), neighbors : "I1" "I3" "I4" "GL1" > .
  eq I3 = < "I3" : PassIntersection | location : (60,0), neighbors : "I2" "GL2" "I5" > .
  eq I4 = < "I4" : PassIntersection | location : (30,-30), neighbors : "I2" "I5" > .
  eq I5 = < "I5" : PassIntersection | location : (60,-30), neighbors : "I3" "I4" > .

  eq resupply = < "Resupply" : ResupplyStation | location : (0, -30), neighbors : "I1" > .
  eq collection = < "Collection" : CollectionStation | location : (0,30), neighbors : "I1", collections : 0 > .
  eq intersections1 = I1 I2 I3 I4 I5 resupply collection GL1 GL2 .

  eq GL1 = < "GL1" : Field | location : (30, 30), neighbors : "I2", growingArea : area((0, 30), (30,30), (0, 40), (30, 40)), waterTimer : [cur: 10 - base: 1000],
    fertilizerTimer : [cur: 1000 - base: 1000], growTimer : [cur: 1000 - base: 1000], fieldAttrs > .
  eq GL2 = < "GL2" : Field | location : (100, 0), neighbors : "I3", growingArea : area((100,0), (110, 0), (100,-10), (110, -10)), waterTimer : [cur: 1000 - base: 1000],
    fertilizerTimer : [cur: 1000 - base: 1000], growTimer : [cur: 20 - base: 1000], fieldAttrs > .

  eq taskRobot = < "T1" : Transporter | location : (30,10), speed : 0, state : idle, direction : south, remainingPath : nil, yieldStatus : noYieldInformation, robotAttrs, transporterAttrs > .
  eq taskRobot2 = < "Y2" : Worker | curCargo : water, location : (70, 0), speed : 0, state : idle, direction : east, remainingPath : nil, yieldStatus : noYieldInformation, robotAttrs, workerAttrs > .

  eq map = < "Map" : Map | allIntersections : intersections1, roads : createRoadSet(intersections1) > .
  eq taskFarm = map GL1 GL2 taskRobot taskRobot2 .
  eq taskTest = taskFarm @ 0 .
endom

omod YIELD-TESTS is
  protecting TIMED-FARM .
  ops taskRobot taskRobot2 taskRobot3 taskRobot4 : -> Object .
  op taskFarm : -> Configuration .
  op taskTest : -> ClockedConfiguration .
    
  ops I1 I2 I3 I4 I5 I6 I7 : -> Object .
  ops robotAttrs workerAttrs transporterAttrs : -> AttributeSet .
  op fieldAttrs : -> AttributeSet .
  op resupply : -> Object .
  op collection : -> Object .
  ops GL1 GL2 : -> Object .
  ops intersections1 : -> Configuration .
  op map : -> Object .

  eq robotAttrs = broadcastRange : 200, maxSpeed : 1, detected : none, auctions : noAuction, curTask : noTask,
    handledTime : false, workState : noWork, detectionRange : 10, obstructionPoints : nil, negotiations : none .
  eq workerAttrs = cargoLevel : full .
  eq transporterAttrs = cargoLevel : empty .
  eq fieldAttrs = handledTime : false, broadcastRange : 200, growingState : growing, waterLevel : good, fertilizerLevel : good, reserved : false, auctions : noAuction, activeTasks : empty .

  eq I1 = < "I1" : PassIntersection | location : (0,0), neighbors : "I2" "Resupply" "Collection" > .
  eq I2 = < "I2" : PassIntersection | location : (100,0), neighbors : "I1" "I3" "GL1" > .
  eq I3 = < "I3" : PassIntersection | location : (100,-100), neighbors : "I2" > .

  eq resupply = < "Resupply" : ResupplyStation | location : (0, -30), neighbors : "I1" > .
  eq collection = < "Collection" : CollectionStation | location : (0,30), neighbors : "I1", collections : 0 > .
  eq intersections1 = I1 I2 I3 resupply collection GL1 .

  eq GL1 = < "GL1" : Field | location : (120, 0), neighbors : "I2", growingArea : area((120, 5), (120,-5), (125, 5), (125, -5)), waterTimer : [cur: 10 - base: 1000],
    fertilizerTimer : [cur: 10 - base: 1000], growTimer : [cur: 1000 - base: 1000], fieldAttrs > .

  eq taskRobot = < "T1" : Transporter | location : (30,0), speed : 0, state : idle, direction : south, remainingPath : nil, yieldStatus : noYieldInformation, robotAttrs, transporterAttrs > .
  eq taskRobot2 = < "T2" : Transporter | location : (100,-30), speed : 0, state : idle, direction : south, remainingPath : nil, yieldStatus : noYieldInformation, robotAttrs, transporterAttrs > .

  eq taskRobot3 = < "W1" : Worker | curCargo : water, location : (0, 0), speed : 0, state : idle, direction : east, remainingPath : nil, yieldStatus : noYieldInformation, robotAttrs, workerAttrs > .
  eq taskRobot4 = < "W2" : Worker | curCargo : fertilizer, location : (100, -100), speed : 0, state : idle, direction : east, remainingPath : nil, yieldStatus : noYieldInformation, robotAttrs, workerAttrs > .

  eq map = < "Map" : Map | allIntersections : intersections1, roads : createRoadSet(intersections1) > .
  eq taskFarm = map GL1 taskRobot taskRobot2 taskRobot3 taskRobot4 .
  eq taskTest = taskFarm @ 0 .
endom

***They detect each other, they both have the worker they are yielding for in yieldStatus
***Send state in requestpath message rule
***Compare state to own in rcv Requestpath msg.
