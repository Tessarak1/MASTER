load location .
fmod PATH is
    protecting LOCATION .
    protecting INT .

    sort Path .

    op nil : -> Path [ctor] .
    op {__} : Location Location -> Path [ctor] .
    op __ : Path Path -> Path [ctor assoc] .

    op overlap : Path Path -> Location [comm] .

    vars X X2 X3 Y Y2 Y3 : Int .

    ***Vertical overlap
    ***eq overlap({(X,Y) (X,Y2)}, {(X3,Y3) (X3,Y4)}) = if  fi .
    ***Overlap between vertical and horizontal path.
    eq overlap({(X,Y) (X,Y2)}, {(X2, Y3) (X3, Y3)}) =
        if (Y3 >= min(Y,Y2) and Y3 <= max(Y,Y2)) and (X >= min(X2,X3) and X <= max(X2,X3)) then
            (X,Y3)
        else 
            failLocation
        fi .
endfm