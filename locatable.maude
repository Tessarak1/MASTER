load location 
load oidSet
omod LOCATABLE is
    protecting LOCATION .
    protecting OID-SET .
    class Locatable | location : Location .

    subsort String < Oid .

    op _in_ : Location Configuration -> Bool .
    op oidSet : Configuration -> OidSet .
    ***Returns the Locatable object in the Configuration that has the least distance from the location
    op minDistance : Object Location Configuration -> Object .
    op distance : Object Object -> Nat [comm] .
    op getOid : Object -> Oid .

    vars X X2 X3 Y Y2 Y3 : Rat .
    vars OID OID2 : Oid .
    var CONF : Configuration .
    var OBJ : Object .
    vars L L2 : Location .

    eq (X,Y) in none = false .
    eq (X,Y) in < OID : Locatable | location : (X,Y) > CONF = true .
    eq (X,Y) in < OID : Locatable | location : (X2,Y2) > CONF = (X,Y) in CONF .

    eq oidSet(none) = none .
    eq oidSet(< OID : Locatable | > CONF) = OID oidSet(CONF) .
    eq getOid(< OID : Locatable | >) = OID .
    eq minDistance(OBJ, (X,Y), none) = OBJ .
    eq minDistance(none, (X,Y), < OID : Locatable | > CONF) = minDistance(< OID : Locatable | >, (X,Y), CONF) .
    eq minDistance(< OID : Locatable | location : (X,Y) >, (X2,Y2), < OID2 : Locatable | location : (X3, Y3) > CONF) =
        if distance((X3,Y3), (X,Y)) < distance((X2,Y2), (X,Y)) then
            minDistance(< OID2 : Locatable | >, (X2,Y2), CONF)
        else
            minDistance(< OID : Locatable | >, (X2,Y2), CONF)
        fi .

    eq distance(< OID : Locatable | location : L >, < OID2 : Locatable | location : L2 >) = distance(L, L2) .
endom