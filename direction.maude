load coordinate .
fmod DIRECTION is
    protecting COORDINATE .
    
    sort Direction .

    ops north east south west : -> Direction [ctor] .

    op setDirection : Coordinate Coordinate -> Direction .
    op oppositeDirections : Direction Direction -> Bool [comm] .
    op differentAxes : Direction Direction -> Bool [comm] .

    vars D D2 : Direction .
    vars X X2 Y Y2 : Rat .

    ceq setDirection((X,Y), (X,Y2)) = north if Y2 > Y .
    ceq setDirection((X,Y), (X2,Y)) = east if X2 > X .
    ceq setDirection((X,Y), (X,Y2)) = south if Y2 < Y .
    ceq setDirection((X,Y), (X2,Y)) = west if X2 < X .

    eq oppositeDirections(north, south) = true .
    eq oppositeDirections(east, west) = true .
    eq oppositeDirections(D, D2) = false [owise] .

    eq differentAxes(north, west) = true .
    eq differentAxes(north, east) = true .
    eq differentAxes(south, west) = true .
    eq differentAxes(south, east) = true .
    eq differentAxes(D, D2) = false [owise] .
endfm